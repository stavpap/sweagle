/*
 * This file is generated by jOOQ.
 */
package com.syntax.sweagleapi.db.performance_schema.tables;


import com.syntax.sweagleapi.db.performance_schema.Indexes;
import com.syntax.sweagleapi.db.performance_schema.Keys;
import com.syntax.sweagleapi.db.performance_schema.PerformanceSchema;
import com.syntax.sweagleapi.db.performance_schema.tables.records.StatusByHostRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StatusByHost extends TableImpl<StatusByHostRecord> {

    private static final long serialVersionUID = -2126082870;

    /**
     * The reference instance of <code>performance_schema.status_by_host</code>
     */
    public static final StatusByHost STATUS_BY_HOST = new StatusByHost();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StatusByHostRecord> getRecordType() {
        return StatusByHostRecord.class;
    }

    /**
     * The column <code>performance_schema.status_by_host.HOST</code>.
     */
    public final TableField<StatusByHostRecord, String> HOST = createField("HOST", org.jooq.impl.SQLDataType.CHAR(255), this, "");

    /**
     * The column <code>performance_schema.status_by_host.VARIABLE_NAME</code>.
     */
    public final TableField<StatusByHostRecord, String> VARIABLE_NAME = createField("VARIABLE_NAME", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>performance_schema.status_by_host.VARIABLE_VALUE</code>.
     */
    public final TableField<StatusByHostRecord, String> VARIABLE_VALUE = createField("VARIABLE_VALUE", org.jooq.impl.SQLDataType.VARCHAR(1024), this, "");

    /**
     * Create a <code>performance_schema.status_by_host</code> table reference
     */
    public StatusByHost() {
        this(DSL.name("status_by_host"), null);
    }

    /**
     * Create an aliased <code>performance_schema.status_by_host</code> table reference
     */
    public StatusByHost(String alias) {
        this(DSL.name(alias), STATUS_BY_HOST);
    }

    /**
     * Create an aliased <code>performance_schema.status_by_host</code> table reference
     */
    public StatusByHost(Name alias) {
        this(alias, STATUS_BY_HOST);
    }

    private StatusByHost(Name alias, Table<StatusByHostRecord> aliased) {
        this(alias, aliased, null);
    }

    private StatusByHost(Name alias, Table<StatusByHostRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> StatusByHost(Table<O> child, ForeignKey<O, StatusByHostRecord> key) {
        super(child, key, STATUS_BY_HOST);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return PerformanceSchema.PERFORMANCE_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.STATUS_BY_HOST_HOST);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<StatusByHostRecord>> getKeys() {
        return Arrays.<UniqueKey<StatusByHostRecord>>asList(Keys.KEY_STATUS_BY_HOST_HOST);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StatusByHost as(String alias) {
        return new StatusByHost(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StatusByHost as(Name alias) {
        return new StatusByHost(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public StatusByHost rename(String name) {
        return new StatusByHost(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public StatusByHost rename(Name name) {
        return new StatusByHost(name, null);
    }
}
