/*
 * This file is generated by jOOQ.
 */
package com.syntax.sweagleapi.db.sys.tables;


import com.syntax.sweagleapi.db.sys.Sys;
import com.syntax.sweagleapi.db.sys.tables.records.MemoryGlobalTotalRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * VIEW
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MemoryGlobalTotal extends TableImpl<MemoryGlobalTotalRecord> {

    private static final long serialVersionUID = 1658166706;

    /**
     * The reference instance of <code>sys.memory_global_total</code>
     */
    public static final MemoryGlobalTotal MEMORY_GLOBAL_TOTAL = new MemoryGlobalTotal();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MemoryGlobalTotalRecord> getRecordType() {
        return MemoryGlobalTotalRecord.class;
    }

    /**
     * The column <code>sys.memory_global_total.total_allocated</code>.
     */
    public final TableField<MemoryGlobalTotalRecord, String> TOTAL_ALLOCATED = createField("total_allocated", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>sys.memory_global_total</code> table reference
     */
    public MemoryGlobalTotal() {
        this(DSL.name("memory_global_total"), null);
    }

    /**
     * Create an aliased <code>sys.memory_global_total</code> table reference
     */
    public MemoryGlobalTotal(String alias) {
        this(DSL.name(alias), MEMORY_GLOBAL_TOTAL);
    }

    /**
     * Create an aliased <code>sys.memory_global_total</code> table reference
     */
    public MemoryGlobalTotal(Name alias) {
        this(alias, MEMORY_GLOBAL_TOTAL);
    }

    private MemoryGlobalTotal(Name alias, Table<MemoryGlobalTotalRecord> aliased) {
        this(alias, aliased, null);
    }

    private MemoryGlobalTotal(Name alias, Table<MemoryGlobalTotalRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("VIEW"));
    }

    public <O extends Record> MemoryGlobalTotal(Table<O> child, ForeignKey<O, MemoryGlobalTotalRecord> key) {
        super(child, key, MEMORY_GLOBAL_TOTAL);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Sys.SYS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MemoryGlobalTotal as(String alias) {
        return new MemoryGlobalTotal(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MemoryGlobalTotal as(Name alias) {
        return new MemoryGlobalTotal(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MemoryGlobalTotal rename(String name) {
        return new MemoryGlobalTotal(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MemoryGlobalTotal rename(Name name) {
        return new MemoryGlobalTotal(name, null);
    }
}
