/*
 * This file is generated by jOOQ.
 */
package com.syntax.sweagleapi.db.performance_schema.tables;


import com.syntax.sweagleapi.db.performance_schema.PerformanceSchema;
import com.syntax.sweagleapi.db.performance_schema.tables.records.KeyringKeysRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class KeyringKeys extends TableImpl<KeyringKeysRecord> {

    private static final long serialVersionUID = -214306390;

    /**
     * The reference instance of <code>performance_schema.keyring_keys</code>
     */
    public static final KeyringKeys KEYRING_KEYS = new KeyringKeys();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<KeyringKeysRecord> getRecordType() {
        return KeyringKeysRecord.class;
    }

    /**
     * The column <code>performance_schema.keyring_keys.KEY_ID</code>.
     */
    public final TableField<KeyringKeysRecord, String> KEY_ID = createField("KEY_ID", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>performance_schema.keyring_keys.KEY_OWNER</code>.
     */
    public final TableField<KeyringKeysRecord, String> KEY_OWNER = createField("KEY_OWNER", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>performance_schema.keyring_keys.BACKEND_KEY_ID</code>.
     */
    public final TableField<KeyringKeysRecord, String> BACKEND_KEY_ID = createField("BACKEND_KEY_ID", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * Create a <code>performance_schema.keyring_keys</code> table reference
     */
    public KeyringKeys() {
        this(DSL.name("keyring_keys"), null);
    }

    /**
     * Create an aliased <code>performance_schema.keyring_keys</code> table reference
     */
    public KeyringKeys(String alias) {
        this(DSL.name(alias), KEYRING_KEYS);
    }

    /**
     * Create an aliased <code>performance_schema.keyring_keys</code> table reference
     */
    public KeyringKeys(Name alias) {
        this(alias, KEYRING_KEYS);
    }

    private KeyringKeys(Name alias, Table<KeyringKeysRecord> aliased) {
        this(alias, aliased, null);
    }

    private KeyringKeys(Name alias, Table<KeyringKeysRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> KeyringKeys(Table<O> child, ForeignKey<O, KeyringKeysRecord> key) {
        super(child, key, KEYRING_KEYS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return PerformanceSchema.PERFORMANCE_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public KeyringKeys as(String alias) {
        return new KeyringKeys(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public KeyringKeys as(Name alias) {
        return new KeyringKeys(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public KeyringKeys rename(String name) {
        return new KeyringKeys(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public KeyringKeys rename(Name name) {
        return new KeyringKeys(name, null);
    }
}
